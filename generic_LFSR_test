library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.numeric_std.all;

entity generic_LFSR_test is
generic(poly : std_logic_vector :="10100");
end generic_LFSR_test;

architecture test of generic_LFSR_test is

component generic_LFSR is
generic (
poly : std_logic_vector);
port ( clk : in std_logic;
rst : in std_logic;
output : out std_logic_vector(poly'high downto 0));
end component;

signal clk  : std_logic := '1';
signal rst : std_logic;
signal output : std_logic_vector(poly'high downto 0);

begin
clk <= not clk after 5 ns;

LFSR : generic_LFSR generic map(
poly => poly)
port map 
(clk=>clk,
rst=>rst,
output=>output);

process 
begin 
rst<='1';
wait for 20 ns;
rst<='0';
wait for 350 ns;
rst<='1';
wait for 10 ns;
rst<='0';
wait for 100 ns;

end process;
end test;
