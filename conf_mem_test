library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.numeric_std.all;

entity conf_mem_test is
generic(bitnes : natural :=8);
end conf_mem_test;


architecture test of conf_mem_test is

component conf_mem
generic(
bitnes : natural := bitnes);
port(
clk : in std_logic;
rst : in std_logic;
en : in std_logic;
cd_in : in std_logic;
reg_alpha : out std_logic_vector(bitnes downto 0);
reg_beta : out std_logic_vector(bitnes downto 1));
end component;

signal clk  : std_logic := '0';
signal rst  : std_logic := '1';
signal en : std_logic;
signal cd_in : std_logic;
signal reg_alpha : std_logic_vector(bitnes downto 0);
signal reg_beta : std_logic_vector(bitnes downto 1);

begin 

clk <= not clk after 1 ns;
rst <= '1', '0' after 5 ns;


memory_test : conf_mem
generic map(bitnes=>bitnes)
port map(
clk =>clk,
rst =>rst,
en =>en,
cd_in =>cd_in,
reg_alpha =>reg_alpha,
reg_beta => reg_beta );

process
begin
wait until (rst = '0');
en<='1';
cd_in<='1';
wait for 2 ns;
cd_in<='0';
wait for 2 ns;
cd_in<='0';
wait for 2 ns;
cd_in<='1';
wait for 2 ns;
cd_in<='1';
wait for 2 ns;
cd_in<='0';
wait for 2 ns;
en<='0';
wait for 10 ns;
end process;

end test;
